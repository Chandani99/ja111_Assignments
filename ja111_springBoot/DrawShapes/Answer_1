
Tight Coupling :
=====================
In Tight Coupling we should know about other objects and are usually highly dependent on each other's interfaces. 
To change one object in a tightly coupled application often requires changes to a number of other objects. 
In a small application we can easily identify the changes and there is less chance to miss anything. 
But in large applications these inter-dependencies are not always known by every programmer or there is a chance of overlooking changes. 


Loose Coupling :
=====================
Loose coupling is a design with the goal to make classes independent to each other with the goal of reducing the risk that changes in one component will 
require changes in any other component. 
Loose coupling is a much more generic concept intended to increase the flexibility of a system, make it more maintainable, and makes the entire framework more "stable".



